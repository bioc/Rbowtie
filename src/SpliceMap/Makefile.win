#R_HOME=`R RHOME`
#if test -z "${R_HOME}"
#then
#  echo "could not determine R_HOME"
#  exit 1
#fi
#CXX=`"${R_HOME}/bin/R" CMD config CXX`
#CXXFLAGS=`"${R_HOME}/bin/R" CMD config CXXFLAGS`
# try with empty BINPREF is g++ not found in default Rtools 4.0 folder
ifeq ($(wildcard c:/rtools40/mingw64/bin/g++.exe),) 
    BINPREF = 
else 
    BINPREF = c:/rtools40/mingw64/bin/
endif
CXX = $(BINPREF)g++
CXXFLAGS=`"${R_HOME}/bin/R" CMD config CXXFLAGS`

all: SpliceMap

clean: 
	rm *.o SpliceMap runSpliceMap_QuasR sortsam amalgamateSAM getSpliceMapUnmapped fuseReorder

SpliceMap: runSpliceMap_QuasR sortsam amalgamateSAM getSpliceMapUnmapped fuseReorder params.o cfgfile.o SpliceMap_utils_QuasR.o main.cpp main.h
	$(CXX) $(CXXFLAGS) -o SpliceMap main.cpp SpliceMap_utils_QuasR.o params.o cfgfile.o -static-libgcc

runSpliceMap_QuasR: SpliceMap_utils_QuasR.o params.o cfgfile.o runSpliceMap_QuasR.cpp runSpliceMap_QuasR.h 
	$(CXX) $(CXXFLAGS) -o runSpliceMap_QuasR SpliceMap_utils_QuasR.o cfgfile.o runSpliceMap_QuasR.cpp params.o -static-libgcc

sortsam: sortsam.cpp sortsam.h SpliceMap_utils_QuasR.o params.o
	$(CXX) $(CXXFLAGS) -o sortsam sortsam.cpp SpliceMap_utils_QuasR.o params.o -static-libgcc

amalgamateSAM: amalgamateSAM.cpp amalgamateSAM.h SpliceMap_utils_QuasR.o params.o
	$(CXX) $(CXXFLAGS) -o amalgamateSAM amalgamateSAM.cpp SpliceMap_utils_QuasR.o params.o -static-libgcc

getSpliceMapUnmapped: getSpliceMapUnmapped.cpp
	$(CXX) $(CXXFLAGS) -o getSpliceMapUnmapped getSpliceMapUnmapped.cpp -static-libgcc

fuseReorder: fuseReorder.cpp
	$(CXX) $(CXXFLAGS) -o fuseReorder fuseReorder.cpp -static-libgcc

SpliceMap_utils_QuasR.o: SpliceMap_utils_QuasR.cpp SpliceMap_utils_QuasR.h
	$(CXX) $(CXXFLAGS) -c SpliceMap_utils_QuasR.cpp  -static-libgcc

params.o: params.cpp params.h
	$(CXX) $(CXXFLAGS) -c params.cpp -static-libgcc

cfgfile.o: cfgfile.cpp cfgfile.h
	$(CXX) $(CXXFLAGS) -c cfgfile.cpp -static-libgcc

