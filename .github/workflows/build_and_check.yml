name: R-CMD-check

on: push

jobs:
  build:

    runs-on: ${{ matrix.config.os }}

    name: ${{ matrix.config.os }} (${{ matrix.config.r }})

    strategy:
      fail-fast: false
      matrix:
        config:
        #- { os: windows-latest, r: '3.6', rtools: '35', bioc: 'devel', args: "--no-manual"}
        - { os: windows-latest, r: 'devel', rtools: '35', bioc: 'devel', args: "--no-manual"}
        #- { os: macOS-latest, r: 'devel', rtools: '40', bioc: 'devel'}
        - { os: macOS-latest, r: 'devel', rtools: '35', bioc: 'devel', args: "--no-manual"}
        #- { os: ubuntu-18.04, r: '3.6', rtools: '35', bioc: 'devel', cran: "https://demo.rstudiopm.com/all/__linux__/bionic/latest", args: "--no-manual" }
        #- { os: ubuntu-16.04, r: 'devel', rtools: '40', bioc: 'devel', cran: "https://demo.rstudiopm.com/all/__linux__/xenial/latest", args: "--no-manual" }
        #- { os: ubuntu-18.04, r: 'devel', rtools: '40', bioc: 'devel', cran: "https://demo.rstudiopm.com/all/__linux__/bionic/latest", args: "--no-manual" }

    env:
      R_REMOTES_NO_ERRORS_FROM_WARNINGS: true
      CRAN: ${{ matrix.config.cran }}

    steps:
    - name: checkout branch
      uses: actions/checkout@v2
      
    - name: setup R
      uses: r-lib/actions/setup-r@master
      with:
        r-version: ${{ matrix.config.r }}
#        rtools-version: ${{ matrix.config.rtools }}

    - name: R version
      run: Rscript -e 'R.version'

    - name: setup Pandoc
      uses: r-lib/actions/setup-pandoc@master

#    - name: setup Tex
#      uses: r-lib/actions/setup-tinytex@master
#      if: contains(matrix.config.args, 'no-manual') == false

    - name: Query dependencies
      run: |
        install.packages(c('remotes', 'BiocManager'), Ncpu = 2L)
        saveRDS(remotes::dev_package_deps(dependencies = TRUE, repos = c(getOption('repos'), BiocManager::repositories())), 'depends.Rds', version = 2)
      shell: Rscript {0}

    - name: Cache R packages
      if: runner.os != 'Windows'
      uses: actions/cache@v1
      with:
        path: ${{ env.R_LIBS_USER }}
        key: ${{ runner.os }}-r-${{ matrix.config.r }}-${{ hashFiles('depends.Rds') }}
        restore-keys: ${{ runner.os }}-r-${{ matrix.config.r }}-

    - name: Install system dependencies
      if: runner.os == 'Linux'
      env:
        RHUB_PLATFORM: linux-x86_64-ubuntu-gcc
      run: |
        Rscript -e "remotes::install_github('r-hub/sysreqs')"
        sysreqs=$(Rscript -e "cat(sysreqs::sysreq_commands('DESCRIPTION'))")
        sudo -s eval "$sysreqs"
        
    - name: Install R package dependencies
      run: |
        remotes::install_deps(dependencies = TRUE, repos = c(getOption('repos'), BiocManager::repositories()), Ncpu = 2L)
        remotes::install_cran("rcmdcheck")
      shell: Rscript {0}

    - name: Check
      run: rcmdcheck::rcmdcheck(args = "--no-manual", error_on = "warning", check_dir = "check")
      shell: Rscript {0}


    - name: Upload check results
      if: failure()
      uses: actions/upload-artifact@master
      with:
        name: ${{ runner.os }}-r${{ matrix.config.r }}-results
        path: check

    - name: Test coverage
      if: matrix.config.os == 'macOS-latest' && matrix.config.r == '4.0'
      run: |
        install.packages("covr")
        covr::codecov(token = "${{secrets.CODECOV_TOKEN}}")
      shell: Rscript {0}

#    - name: Deploy
#      if: github.event_name == 'push' && github.ref == 'refs/heads/master' && matrix.config.os == 'macOS-latest' && matrix.config.r == '4.0'
#      run: |
#        R CMD INSTALL .
#        Rscript -e "install.packages(c('remotes', 'BiocManager'))"
#        Rscript -e "remotes::install_dev('pkgdown'); pkgdown::deploy_to_branch(new_process = FALSE)"



